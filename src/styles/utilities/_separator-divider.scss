:root {
  --space-separator: 0.25rem;
  --symbol: "|";
  --space-divider: 0.5rem;
}

// separated | separator style here
:where(.separated > * + *, .separator) {
  --color-separator: var(--color-neutrals-200); // define color for separator
  --color: var(--color-separator, #b8b3bc);

  &:before {
    color: var(--color);
    content: var(--symbol, "|");
    margin-inline: var(--space-separator);
  }
}

// for custom symbols
:is(.separated, .separator) {
  &.bullet {
    --symbol: "â€¢";
  }

  &.dash {
    --symbol: "/";
  }
}

// separated | separator style here end

// divide-x | divide-y | divider style
:where(.divide-x, .divider-x, .divide-y, .divider-y) {
  --border-color: var(
    --color-primary-tint-200,
    #a199c226
  ); // define color for divider
  --border-width: 1px;
  --border-style: solid;
}
.grid{
	:where(.divide-x > * + *, .divider-x) {
		display:flex;
    align-self: stretch;
	}
}
:where(.divide-x > * + *, .divider-x) {
  display: inherit;
  align-self: stretch;

  &:before {
    border-left: var(--border-width) var(--border-style, solid)
      var(--border-color);
    content: "";
    margin-inline: var(--space-divider);
  }
}

:where(.divide-y > * + *, .divider-y) {
  &:before {
    display: block;
    border-top: var(--border-width) var(--border-style, solid)
      var(--border-color);
    content: "";
    margin-block: var(--space-divider);
  }
}

// for custom divider
:is(.divide-x, .divider-x, .divide-y, .divider-y) {
  &.dashed {
    --border-style: dashed;
  }

  &.dotted {
    --border-style: dotted;
  }
}

// divide-x | divide-y | divider style end
